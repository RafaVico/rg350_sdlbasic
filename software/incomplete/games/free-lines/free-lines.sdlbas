' free-lines
'
'
'___________________________________________________________________________________________________________________________________________________________
common board[8,8]
common ballnext[2]
common x2,y2,v
common sp
common spx[64],spy[64]
common score

'___________________________________________________________________________________________________________________________________________________________

sub init
	paper(0x808080)
	for i =1 to 8
		loadimage("data/gfx/bubble-"+str$(i)+".gif",i)
	next
	ballnext[0]=rnd(8)
	ballnext[1]=rnd(8)
end sub
'___________________________________________________________________________________________________________________________________________________________

sub resetboard
	for y=0 to 7
		for x=0 to 7
			board[x,y]=0
			deletebob (y*8+x)
		next
	next
	deletebob (100)
	deletebob (101)

end sub
'___________________________________________________________________________________________________________________________________________________________

sub cleanboard
	for y=0 to 7
		for x=0 to 7
			if board[x,y] < 0 then : board[x,y]=0:end if
		next
	next
end sub
'___________________________________________________________________________________________________________________________________________________________

sub drawboard
	paper(0x808080)
	cls
	for y=0 to 7
		for x=0 to 7
			i=( i+1) mod 2
			if i>0 then
				ink(0xffffff)
				else
				ink(0)
			end if
			bar(x*60,y*60,x*60 + 60,y*60+60)
		next
		i=( i+1) mod 2
	next
end sub
'___________________________________________________________________________________________________________________________________________________________

function verifygameover
	for y=0 to 7
		for x=0 to 7
			if board[x,y]=0 then :return 0:exit function:end if
		next
	next
	return -1
end function
'___________________________________________________________________________________________________________________________________________________________

function verify5
	n= board[x2,y2]

	for y=0 to 7
		for x=0 to 7

			'check horizontal
			r=0
			for i=0 to 9
				if x+i<9 then
					if board[x+i,y]=n then :r=r+1:else:i=9:end if
				end if
			next
			if r>=5 then
				v+=1
				score+=(r*v)
				for i=0 to 9
					if x+i<9 and board[x+i,y]=n then
						board[x+i,y]=0
						else
						i=9
					end if
				next
				return -1
				exit function
			end if

			'check vertical
			r=0
			for i=0 to 9
				if y+i<9 then
					if board[x,y+i]=n then : r=r+1:else:i=9:end if
				end if
			next
			if r>=5 then
				v+=1
				score+=(r*v)
				for i=0 to 9
					if y+i<9 and board[x,y+i]=n  then
						board[x,y+i]=0
						else
						i=9
					end if
				next
				return -1
				exit function
			end if

			'check diagonal right
			r=0
			for i=0 to 9
				if x+i<9 and y+i<9 then
					if board[x+i,y+i]=n then :r=r+1:else:i=9:end if
				end if
			next
			if r>=5 then
				v+=1
				score+=(r*v)
				for i=0 to 9
					if x+i<9 and y+i<9 and board[x+i,y+i]=n then
						board[x+i,y+i]=0
						else
						i=9
					end if
				next
				return -1
				exit function
			end if

			'check diagonal left
			r=0
			for i=0 to 9
				if x-i >=0 and y+i<9 then
					if board[x-i,y+i]=n then :r=r+1:else:i=9:end if
				end if
			next
			if r>=5 then
				v+=1
				score+=(r*v)
				for i=0 to 9
					if x-i >=0 and y+i<9 and board[x-i,y+i]=n then
						board[x-i,y+i]=0
						else
						i=9
					end if
				next
				return -1
				exit function
			end if
		next
	next
	return 0
end function
'___________________________________________________________________________________________________________________________________________________________

sub drawballs
	for y=0 to 7
		for x=0 to 7
			if board[x,y]=0 then
				deletebob (y*8+x)
				else
				bob((y*8+x),x*60+16,y*60+16,board[x,y])
			end if
		next
	next

end sub
'___________________________________________________________________________________________________________________________________________________________

sub placeballs
	for i= 0 to 1
		do
			x=rnd(9)-1
			y=rnd(9)-1
			if board[x,y]=0 then :exit do :end if

			if verifygameover<>0 then :exit sub :end if
		loop
		board[x,y]=ballnext[i]
		x2=x:y2=y:verify5
		bob((y*8+x),x*60+16,y*60+16,ballnext[i])
		ballnext[i]=rnd(8)
		bob((100+i),480+16,(60*i)+16,ballnext[i])
	next
end sub
'___________________________________________________________________________________________________________________________________________________________

function checkboard(x,y)
	if y >=0  and y<8 and x>=0 and x<8 then
		if board[x,y]=0 then
			board[x,y]=-1
			ink(0x808080):bar (x*60,y*60,x*60+10,y*60+10)
			spx[sp]=x
			spy[sp]=y
			sp+=1
			wait(25)
			return 1
			exit function
		end if
	end if
	return 0
end function
'___________________________________________________________________________________________________________________________________________________________

function checkpath(xb,yb,xe,ye)
	' nord 	0
	'sud 		1
	'ovest 	2
	'est 		3

	x=xb
	y=yb
	n=board[x,y]
	sp=0


	'board[x,y]=-1
	while x<>xe or y<>ye

		'd= 0 orizzontale 1verticale
		'dx= 0 ovest 1 est
		'dy= 0 nord 1 sud

		'decide la sequenza da provare
		if abs(xe-x)< abs(ye-y) then
			d=0
			else
			d=1
		end if

		if (xe-x)<0 then
			dx=0
			else
			dx=1
		end if

		if (ye-y)<0 then
			dy=0
			else
			dy=1
		end if

		p=1
		'combinazioni:
		'd0 dx0 dy0 noes
		if d=0 and dx=0 and dy=0 then
			if p<>0 and checkboard(x,y-1)=1 then:y=y-1:p=0:end if:   ' n
			if p<>0 and checkboard(x-1,y)=1 then:x=x-1:p=0:end if:  ' o
			if p<>0 and checkboard(x+1,y)=1 then:x=x+1:p=0:end if: ' e
			if p<>0 and checkboard(x,y+1)=1 then:y=y+1:p=0:end if:  ' s
		end if
		'd0 dx0 dy1 soen
		if d=0 and dx=0 and dy=1 then
			if p<>0 and checkboard(x,y+1)=1 then:y=y+1:p=0:end if:  ' s
			if p<>0 and checkboard(x-1,y)=1 then:x=x-1:p=0:end if:  ' o
			if p<>0 and checkboard(x+1,y)=1 then:x=x+1:p=0:end if: ' e
			if p<>0 and checkboard(x,y-1)=1 then:y=y-1:p=0:end if:   ' n
		end if
		'd0 dx1 dy0 neos
		if d=0 and dx=1 and dy=0 then
			if p<>0 and checkboard(x,y-1)=1 then:y=y-1:p=0:end if:   ' n
			if p<>0 and checkboard(x+1,y)=1 then:x=x+1:p=0:end if: ' e
			if p<>0 and checkboard(x-1,y)=1 then:x=x-1:p=0:end if:  ' o
			if p<>0 and checkboard(x,y+1)=1 then:y=y+1:p=0:end if:  ' s
		end if
		'd0 dx1 dy1 seon
		if d=0 and dx=1 and dy=1 then
			if p<>0 and checkboard(x,y+1)=1 then:y=y+1:p=0:end if:  ' s
			if p<>0 and checkboard(x+1,y)=1 then:x=x+1:p=0:end if: ' e
			if p<>0 and checkboard(x-1,y)=1 then:x=x-1:p=0:end if:  ' o
			if p<>0 and checkboard(x,y-1)=1 then:y=y-1:p=0:end if:   ' n
		end if
		'd1 dx0 dy0 onse
		if d=1 and dx=0 and dy=0 then
			if p<>0 and checkboard(x-1,y)=1 then:x=x-1:p=0:end if:  ' o
			if p<>0 and checkboard(x,y-1)=1 then:y=y-1:p=0:end if:   ' n
			if p<>0 and checkboard(x,y+1)=1 then:y=y+1:p=0:end if:  ' s
			if p<>0 and checkboard(x+1,y)=1 then:x=x+1:p=0:end if: ' e
		end if
		'd1 dx0 dy1 osne
		if d=1 and dx=0 and dy=1 then
			if p<>0 and checkboard(x-1,y)=1 then:x=x-1:p=0:end if:  ' o
			if p<>0 and checkboard(x,y+1)=1 then:y=y+1:p=0:end if:  ' s
			if p<>0 and checkboard(x,y-1)=1 then:y=y-1:p=0:end if:   ' n
			if p<>0 and checkboard(x+1,y)=1 then:x=x+1:p=0:end if: ' e
		end if
		'd1 dx1 dy0 enso
		if d=1 and dx=1 and dy=0 then
			if p<>0 and checkboard(x+1,y)=1 then:x=x+1:p=0:end if: ' e
			if p<>0 and checkboard(x,y-1)=1 then:y=y-1:p=0:end if:   ' n
			if p<>0 and checkboard(x,y+1)=1 then:y=y+1:p=0:end if:  ' s
			if p<>0 and checkboard(x-1,y)=1 then:x=x-1:p=0:end if:  ' o
		end if
		'd1 dx1 dy1 esno
		if d=1 and dx=1 and dy=1 then
			if p<>0 and checkboard(x+1,y)=1 then:x=x+1:p=0:end if: ' e
			if p<>0 and checkboard(x,y+1)=1 then:y=y+1:p=0:end if:  ' s
			if p<>0 and checkboard(x,y-1)=1 then:y=y-1:p=0:end if:   ' n
			if p<>0 and checkboard(x-1,y)=1 then:x=x-1:p=0:end if:  ' o
		end if

		'check fine possibilita'
		if sp<=0 and p<>0 then
			cleanboard
			drawboard
			exit while
		end if

		'strada sbagliata torna indietro
		if p<>0 then
			locate (55,0):prints("x:"+str$(x)+" y:"+str$(y))
			sp-=1
			ink(0x800000):bar (x*60,y*60,x*60+10,y*60+10)
			x=spx[sp]
			y=spy[sp]
			p=0
		end if
	end while

	'bug exit function non funziona dall'interno di un ciclo while
	if p<>0 then
		'stop
		return 0
		exit function
	end if


	x=xb
	y=yb

	'secondo tempo sposta la palla
	board[x,y]=0

	for i=0 to sp-1
		x=spx[i]
		y=spy[i]
		bob(yb*8+xb,x*60+16,y*60+16,n)
		wait(150)
		waitvbl
	next

	board [xe,ye]=n
	cleanboard
	return 1
end function
'___________________________________________________________________________________________________________________________________________________________

sub moveballs
	s=0
	while s<>2
		if bmouse=1 and  mousezone(0,0,60*8,60*8)=1 then
			if s=0 then
				x1=int(xmouse/60)
				y1=int(ymouse/60)
				s=1
				ink(0xff0000):	box(x1*60,y1*60,x1*60+60,y1*60+60)
				ink(0xff0000):	box(x1*60+1,y1*60+1,x1*60+60-2,y1*60+60-2)
				wait(500)
				waitvbl
				while bmouse<>0:waitvbl:end while
				else
				x2=int(xmouse/60)
				y2=int(ymouse/60)
				if board[x2,y2]<>0 then
					x1=x2
					y1=y2
					drawboard
					ink(0xff0000):	box(x1*60,y1*60,x1*60+60,y1*60+60)
					ink(0xff0000):	box(x1*60+1,y1*60+1,x1*60+60-2,y1*60+60-2)
					while bmouse<>0:waitvbl:end while
					else
					if checkpath(x1,y1,x2,y2)=1 then
						s=2
						else
						s=0
					end if
				end if
			end if
		end if
	end while
	while bmouse<>0:waitvbl:end while
	'board[x2,y2]=board[x1,y1]
	board[x1,y1]=0

	drawboard
	drawballs

	waitvbl
end sub
'___________________________________________________________________________________________________________________________________________________________

sub drawscore
	locate (55,0)
	prints("score:"+str$(score))
end sub
'___________________________________________________________________________________________________________________________________________________________
sub game
	drawboard
	waitvbl
	score=0
	v=0
	do
		drawballs
		if v=0 then:placeballs:else:v=0:end if
		waitvbl
		if  verifygameover then: exit do :end if
		moveballs
		verify5
		drawscore
	loop
end sub
'___________________________________________________________________________________________________________________________________________________________

sub main
	x2=0:y2=0
	setdisplay(640,480,32,1)
	init
	do
		cls
		resetboard
		text(280+i,210-abs(i),32,"free-lines")
		text (300-i,260+abs(i),12, "press space to start")
		i=i+(rnd(4)-2)
		waitvbl
		if key(k_space) then : game : end if
		if key(27) then: end :end if
	loop
end sub
'___________________________________________________________________________________________________________________________________________________________

main
