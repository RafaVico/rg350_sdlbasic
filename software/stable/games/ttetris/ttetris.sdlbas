'
' sdlBasic game: Toccil tetris
'
'   Name:      ttetris.sdlbas
'   Purpose:   this game was original written in qbasic for a my friend Toccil. this translation is an examples of bad code. i suggest
'  to not read this source. But it works.....
'  Author:     __vroby__    ( __vroby__@libero.it )
'  Licence:    LGPL
'
' Bugs:
'
' Todo:
'  audio part
'
'-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
setdisplay(360,270,32,1)
setautoback(0)

common tPalette[256]
common buffer[10000]
common map[10, 16]
common blxdata[6, 3, 3]
common blydata[6, 3, 3]
common score$[10]

'------------------------------------------------------
'definizioni pezzi
common dati[7,4,8]

'QUADRATO

dati[0,0,0]= 0:dati[0,0,1]=0:dati[0,0,2]=1:dati[0,0,3]=0:dati[0,0,4]=0:dati[0,0,5]=1:dati[0,0,6]=1:dati[0,0,7]=1
dati[0,1,0]= 0:dati[0,1,1]=0:dati[0,1,2]=1:dati[0,1,3]=0:dati[0,1,4]=0:dati[0,1,5]=1:dati[0,1,6]=1:dati[0,1,7]=1
dati[0,2,0]= 0:dati[0,2,1]=0:dati[0,2,2]=1:dati[0,2,3]=0:dati[0,2,4]=0:dati[0,2,5]=1:dati[0,2,6]=1:dati[0,2,7]=1
dati[0,3,0]= 0:dati[0,3,1]=0:dati[0,3,2]=1:dati[0,3,3]=0:dati[0,3,4]=0:dati[0,3,5]=1:dati[0,3,6]=1:dati[0,3,7]=1

'ELLE1



dati[1,0,0]= 0:dati[1,0,1]= 2:dati[1,0,2]= 0:dati[1,0,3]= 1:dati[1,0,4]= 1:dati[1,0,5]= 1:dati[1,0,6]= 2:dati[1,0,7]= 1
dati[1,1,0]= 0:dati[1,1,1]= 0:dati[1,1,2]=-1:dati[1,1,3]=0:dati[1,1,4]=0:dati[1,1,5]=1:dati[1,1,6]=0:dati[1,1,7]=2
dati[1,2,0]=-1:dati[1,2,1]=0:dati[1,2,2]=0:dati[1,2,3]=0:dati[1,2,4]=1:dati[1,2,5]=0:dati[1,2,6]=1:dati[1,2,7]=-1
dati[1,3,0]=0:dati[1,3,1]=-1:dati[1,3,2]=0:dati[1,3,3]=0:dati[1,3,4]=0:dati[1,3,5]=1:dati[1,3,6]=1:dati[1,3,7]=1

'ELLE2

dati[2,0,0]= 0:dati[2,0,1]= 0:dati[2,0,2]= 0:dati[2,0,3]= 1:dati[2,0,4]= 1:dati[2,0,5]= 1:dati[2,0,6]= 2:dati[2,0,7]= 1
dati[2,1,0]= 0:dati[2,1,1]= 0:dati[2,1,2]=1:dati[2,1,3]=0:dati[2,1,4]=0:dati[2,1,5]=1:dati[2,1,6]=0:dati[2,1,7]=2
dati[2,2,0]=-1:dati[2,2,1]=0:dati[2,2,2]=0:dati[2,2,3]=0:dati[2,2,4]=1:dati[2,2,5]=0:dati[2,2,6]=1:dati[2,2,7]=1
dati[2,3,0]=1:dati[2,3,1]=-1:dati[2,3,2]=1:dati[2,3,3]=0:dati[2,3,4]=1:dati[2,3,5]=1:dati[2,3,6]=0:dati[2,3,7]=1

'ESSE1

dati[3,0,0]= 0:dati[3,0,1]=1:dati[3,0,2]=1:dati[3,0,3]=1:dati[3,0,4]=1:dati[3,0,5]=0:dati[3,0,6]=2:dati[3,0,7]=0
dati[3,1,0]= 0:dati[3,1,1]=-1:dati[3,1,2]=0:dati[3,1,3]=0:dati[3,1,4]=1:dati[3,1,5]=0:dati[3,1,6]=1:dati[3,1,7]=1
dati[3,2,0]= 0:dati[3,2,1]=1:dati[3,2,2]=1:dati[3,2,3]=1:dati[3,2,4]=1:dati[3,2,5]=0:dati[3,2,6]=2:dati[3,2,7]=0
dati[3,3,0]= 0:dati[3,3,1]=-1:dati[3,3,2]=0:dati[3,3,3]=0:dati[3,3,4]=1:dati[3,3,5]=0:dati[3,3,6]=1:dati[3,3,7]=1


'ESSE2

dati[4,0,0]= 0:dati[4,0,1]=0:dati[4,0,2]=1:dati[4,0,3]=0:dati[4,0,4]=1:dati[4,0,5]=1:dati[4,0,6]=2:dati[4,0,7]=1
dati[4,1,0]= 0:dati[4,1,1]=0:dati[4,1,2]=0:dati[4,1,3]=1:dati[4,1,4]=1:dati[4,1,5]=0:dati[4,1,6]=1:dati[4,1,7]=-1
dati[4,2,0]= 0:dati[4,2,1]=0:dati[4,2,2]=1:dati[4,2,3]=0:dati[4,2,4]=1:dati[4,2,5]=1:dati[4,2,6]=2:dati[4,2,7]=1
dati[4,3,0]=0:dati[4,3,1]=0:dati[4,3,2]=0:dati[4,3,3]=1:dati[4,3,4]=1:dati[4,3,5]=0:dati[4,3,6]=1:dati[4,3,7]=-1


'STANGA

dati[5,0,0]= -1:dati[5,0,1]=0:dati[5,0,2]=0:dati[5,0,3]=0:dati[5,0,4]=1:dati[5,0,5]=0:dati[5,0,6]=2:dati[5,0,7]=0
dati[5,1,0]= 0:dati[5,1,1]=-1:dati[5,1,2]=0:dati[5,1,3]=0:dati[5,1,4]=0:dati[5,1,5]=1:dati[5,1,6]=0:dati[5,1,7]=2
dati[5,2,0]= -1:dati[5,2,1]=0:dati[5,2,2]=0:dati[5,2,3]=0:dati[5,2,4]=1:dati[5,2,5]=0:dati[5,2,6]=2:dati[5,2,7]=0
dati[5,3,0]= 0:dati[5,3,1]=-1:dati[5,3,2]=0:dati[5,3,3]=0:dati[5,3,4]=0:dati[5,3,5]=1:dati[5,3,6]=0:dati[5,3,7]=2

'TI

dati[6,0,0]= 0:dati[6,0,1]=-1:dati[6,0,2]=-1:dati[6,0,3]=0:dati[6,0,4]=0:dati[6,0,5]=0:dati[6,0,6]=1:dati[6,0,7]=0
dati[6,1,0]= 0:dati[6,1,1]=-1:dati[6,1,2]=0:dati[6,1,3]=0:dati[6,1,4]=1:dati[6,1,5]=0:dati[6,1,6]=0:dati[6,1,7]=1
dati[6,2,0]= 0:dati[6,2,1]=1:dati[6,2,2]=-1:dati[6,2,3]=0:dati[6,2,4]=0:dati[6,2,5]=0:dati[6,2,6]=1:dati[6,2,7]=0
dati[6,3,0]= 0:dati[6,3,1]=-1:dati[6,3,2]=0:dati[6,3,3]=0:dati[6,3,4]=-1:dati[6,3,5]=0:dati[6,3,6]=0:dati[6,3,7]=1

'fine

'--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

'function timer
 '   if os = "unix" then
  '      return ticks / 100000
 '   else
  '      return ticks / 100
 '   end if
'end function
'--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

sub salva()
	nf$ = "scr.tt"
	OPEN nf$ for output as #1
	FOR i = 0 TO 9
		PRINT #1, score$[i]
	NEXT
	CLOSE 1
end sub
'--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

sub cancella()
	FOR i = 0 TO 10
		score$[i] = "0000 ....."
	NEXT
	salva
end sub
'--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

sub carica()
	nf$ = "scr.tt"
	if fileexists(nf$) then
		OPEN nf$ FOR INPUT AS #1
		for i = 0 to 9
			file input #1, score$[i]
		next
		CLOSE 1
	end if
end sub
'--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

sub colb(c, r,g,b)
	tPalette [c]= rgb(r,g,b)
	tPalette [c + 8]=  rgb(r,g,b) + (rgb(r/2,g/2,b/2))
	tPalette [c + 16]= rgb(r,g,b) - (rgb(r/2,g/2,b/2))
end sub
'--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

sub ombra (y, x)
	yg = y * 13 +13: xg = x * 13 +13
	INK(rgb(110,200,110))
	BAR (xg, yg, xg + 13, yg + 13)
	INK(rgb(110-2,200-2,110-2))
	BOX (xg, yg, xg + 13, yg + 13)
end sub
'--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

sub delblock (y, x)
	yg = y * 13 : xg = x * 13
	ink (rgb(100,255,100))
	BAR (xg, yg, xg + 13, yg + 12)
	ink (rgb(100-10,255-10,100-10))
	BOX (xg, yg, xg + 13, yg + 12)

end sub
'--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

sub posa (y, x, c)
	yg = y * 13: xg = x * 13

	ink(tPalette[c])
	bar (xg, yg,xg + 12, yg + 12)

	ink(tPalette[c+8])
	LINE (xg, yg + 12, xg, yg)
	LINE (xg, yg, xg + 12, yg)

	ink(tPalette[c+16])
	LINE (xg + 1, yg + 12, xg + 12, yg + 12)
	LINE (xg + 12, yg +12, xg + 12, yg)

	ink(tPalette[c+8])
	LINE (xg + 1, yg + 11, xg + 1, yg + 1)
	LINE (xg + 1, yg + 1, xg + 11, yg + 1)

	ink(tPalette[c+16])
	LINE (xg + 2, yg + 11, xg + 11, yg + 11)
	LINE (xg +11, yg + 11, xg + 11, yg + 1)
END SUB
'--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

'inizio:
cls()

colb(0,127,127,127)
colb(1,127,0,127)
colb(2,0,127,127)
colb(3,127,127,0)
colb(4,0,0,127)
colb(5,0,127,0)
colb(6,127,0,0)
colb(7,127,127,80)

for i = 0 TO 16: map[10, i] = 1: next
for i = 0 TO 10: map[i, 16] = 1: next


score$[0] = "0130 ....."
score$[1] = "0100 ....."
score$[2] = "0092 ....."
score$[3] = "0085 ....."
score$[4] = "0061 ....."
score$[5] = "0040 ....."
score$[6] = "0007 ....."
score$[7] = "0006 ....."
score$[8] = "0005 ....."
score$[9] = "0003 ....."

carica



FOR n = 0 TO 6
	FOR d = 0 TO 3
		FOR i = 0 TO 3
			blxdata[n, d, i] = dati[n,d,i*2]
			blydata[n, d, i] = dati[n,d,i*2+1]
		NEXT
	NEXT
NEXT
n = 0: d = 0: i = 0
COR$ = "|          |"
BAS$ = "+----------+"

while 0=0

	CLS()
	ink (rgb(100,255,100))
	bar (0,0,screenwidth,screenHeight)
	paper (rgb(100,255,100))
	pen (0)


	LOCATE (13, 12): PRINTs("occil")
	LOCATE (13, 13): PRINTs ("etris")

	FOR x = 6 TO 10:  posa(9, x, 1): NEXT
	FOR y = 10 TO 13:  posa(y, 8, 1): NEXT


	FOR x = 15 TO 18: posa(13, x, 2): NEXT
	posa(12, 16, 2)
	posa(11, 17, 2)
	posa(10, 18, 2)
	posa(9, 17, 2)
	posa(9, 16, 2)
	posa(10, 15, 2)





	   LOCATE (17, 15): PRINTs ("2003 sdlBasic ")

        screenswap
	 waitkey
	 a=0
	 while a=0
		 a = inkey
	 end while

	if a = 27 THEN
		 END
	end if

	CLS
	ink (rgb(100,255,100))
	bar (0,0,screenwidth,screenHeight)

	   FOR x = 0 TO 9: FOR y = 0 TO 15: map[x, y] = 0: NEXT: NEXT

	FOR pausay = 15 TO 0 STEP -1
	    FOR pausax = 0 TO 9
		delblock(pausay, 6 + pausax)
	    NEXT
	NEXT
	screenswap

	FOR y = 0 TO 15 : ombra(y, 5): NEXT
	FOR y = 0 TO 15: ombra(y, 16): NEXT
	FOR x = 5 TO 16:  ombra(16, x): NEXT

	FOR y = 0 TO 8: ombra(y, 16): NEXT
	FOR y = 0 TO 8: ombra(y, 23): NEXT
	FOR x = 16 TO 23: ombra(0, x): NEXT
	FOR x = 16 TO 23: ombra(8, x): NEXT

	FOR y = 10 TO 17: ombra(y - 1, 17): NEXT
	FOR y = 10 TO 17: ombra(y - 1, 23): NEXT
	FOR x = 17 TO 23: ombra(9, x): NEXT
	FOR x = 17 TO 23: ombra(16, x): NEXT



	FOR y = 0 TO 15:  posa(y, 5, 0): NEXT
	FOR y = 0 TO 15:  posa(y, 16, 0): NEXT
	FOR x = 5 TO 16:  posa(16, x, 0): NEXT

	FOR y = 0 TO 8:  posa(y, 16, 0): NEXT
	FOR y = 0 TO 8:  posa(y, 24, 0): NEXT
	FOR x = 16 TO 24:  posa(0, x, 0): NEXT
	FOR x = 16 TO 24:  posa(8, x, 0): NEXT

	FOR y = 10 TO 17:  posa(y - 1, 17, 0): NEXT
	FOR y = 10 TO 17:  posa(y - 1, 24, 0): NEXT
	FOR x = 17 TO 24:  posa(9, x, 0): NEXT
	FOR x = 17 TO 24:  posa(16, x, 0): NEXT


	linea = 0: LIV = 0
	 LINC = TIMER + 100000
	grab(1,0, 0,210, 240)


	oldn=0
	while 0=0
		while 0=0
			wait(50)
			FOR iiy = 11 TO 15:FOR iix=19 to   23:  delblock (iiy,iix): NEXT:NEXT
			n = oldn
			oldn = RND( 7)
			d = 0
			FOR i = 0 TO 3:  ombra(12 + blydata[oldn, d, i], 20 + blxdata[oldn, d, i]): NEXT
			FOR i = 0 TO 3:  posa(12 + blydata[oldn, d, i], 20 + blxdata[oldn, d, i], oldn + 1): NEXT


			LOCATE(27,2): PRINTs ("LINE")
			LOCATE (29,3): PRINTs (str$(linea))
			LOCATE(27,5): PRINTs ("LEVEL")
			LOCATE (29,6): PRINTs (str$(LIV))


			x = 4: y = 1: d = 0
			p = timer + 400


			while 0=0

				xv = x: yv = y: oldd = d
				IF timer() > p THEN :p = timer +(400 - LIV): y = y + 1:end if
				a1$=""
				ex=0
				while 0=0

					'wait (50)
					a$  = chr$(inkey)

					 if a1$<>"K" and key(k_left) then:a$="K":end if
					 if a1$<>"M" and key(k_right) then:a$="M":end if

					 if a1$<>" " and key(k_up) then:a$=" ":end if
					 if a1$<>"P" and key(k_down) then:a$="P":end if

					if a$=a1$ then
						a1$=a$
						a$=""
					end if

					IF a$ = CHR$(27) THEN : END:end if
					IF a$ = "p" THEN
						FOR pausay = 15 TO 0 STEP -1
							FOR pausax = 0 TO 9
								posa(pausay, 6 + pausax, 1)
							NEXT
							wait(50)
							screenswap
						NEXT
						LOCATE( 13, 7): PRINTS ("freeze")
						screenswap
						while inkey<>0:end while
						waitkey
						FOR pausay = 15 TO 0 STEP -1
							FOR pausax = 0 TO 9
								delblock(pausay, 6 + pausax)
							NEXT
							wait(50)
							screenswap
						NEXT
						'LOCATE( 15, 20): PRINTs ("          ")
					END IF

					 IF a$ = "K" THEN
						FOR i = 0 TO 3
							blx = (blxdata[n, d, i] + x)
							bly = (blydata[n, d, i] + y)

							IF (blx - 1) < 0 THEN :ex=1 :end if
							IF ex=0 and map[(blx - 1), bly] <> 0 THEN :ex=1 :end if
						NEXT
						if ex=0 then
							x = x - 1
							ex = 1
                                                        wait(100)
						end if
					END IF


					IF a$ = "M" THEN
						FOR i = 0 TO 3
							blx = (blxdata[n, d, i] + x)
							bly = (blydata[n, d, i] + y)

							IF (blx + 1) > 9 THEN :ex=1 :end if
							IF map[(blx + 1), bly] <> 0 THEN : ex=1 :end if
						NEXT
						if ex=0 then
							x = x + 1
							ex = 1
                                                        wait(100)
						end if
					END IF


					IF a$ = "P" THEN
						FOR i = 0 TO 3
							 IF (blydata[n, d, i] + y) > 15 THEN : ex=1 :end if
						NEXT
						if ex=0 then
							p = 0
							ex=1
							wait(100)
						end if

					END IF


					IF a$ = " " THEN
						FOR i = 0 TO 3
							blx = (blxdata[n, (d + 1) MOD 4, i] + x)
							bly = (blydata[n, (d + 1) MOD 4, i] + y)
							 IF ex=0 and (blxdata[n, (d + 1) MOD 4, i] + x) > 9 THEN :ex=1 :end if
							IF ex=0 and (blxdata[n, (d + 1) MOD 4, i] + x) < 0 THEN : ex=1 : end if
							IF ex=0 and (blydata[n, (d + 1) MOD 4, i] + y) > 15 THEN : ex=1 : end if

							if ex = 0 then
								_map = map[blx, bly]
							end if

							IF _map <> 0 THEN :ex=1:end if
						NEXT
                                                if ex=0 then
                                                    d = (d + 1) MOD 4
                                                    wait(150)
                                                end if
						ex = 1
					END IF

                                        'locate(0,0):prints(str$(timer))
					'locate(0,1):prints(str$(p))
                                        screenswap
					IF timer > p THEN : ex = 1:end if

					if  ex = 1 then :exit while:end if
				end while
				ex = 0


				IF timer > LINC THEN
					 LINC = timer + (100000): LIV = LIV + 1
				END IF

				pasteicon(0,0,1)

				FOR i = 0 TO 3
					blx = (blxdata[n, d, i] + x)
					bly = (blydata[n, d, i] + y)
					IF map[blx + 1, bly + 1] = 0 THEN
						ombra(y + blydata[n, d, i], 6 + x + blxdata[n, d, i])
					END IF
				NEXT

				FOR i = 0 TO 3
					posa(y + blydata[n, d, i], x + 6 + blxdata[n, d, i], n + 1)
				NEXT

				FOR i = 0 TO 3
					blx = (blxdata[n, d, i] + x)
					bly = (blydata[n, d, i] + y)
					IF bly = 15 THEN
						FOR i1 = 0 TO 3
							blx = (blxdata[n, d, i1] + x)
							bly = (blydata[n, d, i1] + y)
							 map[blx, bly] = n + 1
						NEXT
						exit while
					END IF

                                            m = map[blx, 1 + bly]

					IF m <> 0 THEN
						FOR i1 = 0 TO 3
							blx = (blxdata[n, d, i1] + x)
							bly = (blydata[n, d, i1] + y)
							 map[blx, bly] = n + 1
						NEXT
						exit while
					END IF
				NEXT
			 end while

			linloc = 0
			FOR y = 15 TO 0 STEP -1
				 pl = 0
				 FOR x = 0 TO 9
					IF map[x, y] <> 0 THEN
						pl = pl + 1
					END IF
				 NEXT

				 IF pl = 10 THEN


					linloc = linloc + 1

					FOR i = y TO 1 STEP -1
						FOR x = 0 TO 9
							map[x, i] = map[x, i - 1]
						NEXT
					NEXT
					FOR x = 0 TO 9: map[x, 0] = 0: NEXT
					y = y + 1
				 END IF

				 IF y = 1 THEN
					IF pl <> 0 THEN
						exit while
					END IF
				 END IF

				 IF pl = 0 THEN :y = 0:end if
			 NEXT
			linea = linea + (linloc * linloc)


			FOR x = 9 TO 0 STEP -1
				FOR y = 15 TO 0 STEP -1
					IF map[x, y] <> 0 THEN
						IF map[x + 1, y + 1] = 0 THEN
							ombra(y, 6 + x)
						END IF
						posa(y, x + 6, map[x, y])
					ELSE
						delblock(  y,   x+6)
						IF x = 0 AND y > 0 THEN :ombra(y-1, 5 + x):end if
					END IF
				NEXT
			NEXT

			grab(1,0, 0,210, 240)

		end while

		FOR y = 15 TO 0 STEP -1
			FOR x = 0 TO 9
				posa(y, 6 + x, 1)
			NEXT
			wait(50)
			screenswap
		NEXT

		LOCATE( 13, 9): PRINTs (" GAME ")
		LOCATE (13, 10): PRINTs(" OVER ")


		sl = timer + 1
		while 0=0
			if  timer >= sl then :exit while:end if
		end while

		wait(2000)

		CLS
		ink (rgb(100,255,100))
		bar (0,0,screenwidth,screenHeight)

		TPA = 10
		FOR i = 9 TO 0 STEP -1
			IF linea > VAL(LEFT$(score$[i], 4)) THEN
				TPA = i
				score$[i + 1] = score$[i]
			END IF
		NEXT


		score$[TPA] = ""
		LOCATE ( 7,1): PRINTs( "RECORD TABLE")
		FOR i = 0 TO 9
			LOCATE ( 3,i + 5): PRINTs( str$(i + 1)+ space$(5)+ score$[i])
		NEXT

		IF TPA < 10 THEN
			lin$ = STR$(linea)
			lin$ = RIGHT$("0000" + lin$, 4)
			score$[TPA] = lin$ + " ....."
			LOCATE(  5, TPA+5): PRINTs (str$(TPA + 1)+ space(5)+ score$[TPA])
			'LINE INPUT ""; n$
			n$=date
			score$[TPA] = lin$ + " ....." + n$

			salva
		END IF


		CLS
		ink (rgb(100,255,100))
		bar (0,0,screenwidth,screenHeight)

		LOCATE (7,1): PRINTs ("RECORD TABLE")
		FOR i = 0 TO 9
			LOCATE (3,i + 5): PRINTs ( str$(i + 1) +  space(5)+ score$[i])
		NEXT
		LOCATE (1,16): PRINTs( "Press c for reset record table")

		FOR i = 0 TO 5
			wait(500)
			a$ = chr$(INKEY)
			IF a$ = "c" THEN : cancella:end if
			IF a$ <> "" THEN :exit while:end if
		NEXT
		exit while
	end while
end while
